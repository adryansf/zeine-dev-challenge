/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * Gestao de Marketplace API
 * OpenAPI spec version: 1.0.0
 */
export type PostApiAuthSignUpBody = {
  /** @minLength 3 */
  name: string;
  /** @minLength 8 */
  phone: string;
  /** @pattern ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$ */
  email: string;
  /** @minLength 8 */
  password: string;
  callbackURL?: string;
};

export type PostApiAuthSignUp200User = {
  id: string;
  /** @pattern ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$ */
  email: string;
  name: string;
  /** @nullable */
  image: string | null;
  emailVerified: boolean;
  createdAt: string;
  updatedAt: string;
};

export type PostApiAuthSignUp200 = {
  token: string;
  user: PostApiAuthSignUp200User;
};

export type PostApiAuthSignUp400 = {
  statusCode: number;
  code?: string;
  error: string;
  message: string;
};

export type PostApiAuthSignInBody = {
  /** @pattern ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$ */
  email: string;
  /** @minLength 8 */
  password: string;
  callbackURL?: string;
  rememberMe?: boolean;
};

export type PostApiAuthSignIn200User = {
  id: string;
  /** @pattern ^(?!\.)(?!.*\.\.)([A-Za-z0-9_'+\-\.]*)[A-Za-z0-9_+-]@([A-Za-z0-9][A-Za-z0-9\-]*\.)+[A-Za-z]{2,}$ */
  email: string;
  name: string;
  /** @nullable */
  image: string | null;
  emailVerified: boolean;
  createdAt: string;
  updatedAt: string;
};

export type PostApiAuthSignIn200 = {
  redirect: boolean;
  token: string;
  user: PostApiAuthSignIn200User;
};

export type PostApiAuthSignIn400 = {
  statusCode: number;
  code?: string;
  error: string;
  message: string;
};

export type PatchApiProductsIdProductPhotoUploadBody = {
  /** binary */
  file: Blob;
};

/**
 * Not Found
 */
export type PatchApiProductsIdProductPhotoUpload404 = {
  statusCode: number;
  error: string;
  message: string;
};

/**
 * Internal Server Error
 */
export type PatchApiProductsIdProductPhotoUpload500 = {
  statusCode: number;
  error: string;
  message: string;
};

export type GetApiProductsParams = {
page?: number;
search?: string;
status?: GetApiProductsStatus;
category?: GetApiProductsCategory;
};

export type GetApiProductsStatus = typeof GetApiProductsStatus[keyof typeof GetApiProductsStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiProductsStatus = {
  listed: 'listed',
  sold: 'sold',
  canceled: 'canceled',
} as const;

export type GetApiProductsCategory = typeof GetApiProductsCategory[keyof typeof GetApiProductsCategory];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiProductsCategory = {
  toy: 'toy',
  furniture: 'furniture',
  stationery: 'stationery',
  health_beauty: 'health_beauty',
  utensil: 'utensil',
  clothing: 'clothing',
} as const;

export type GetApiProducts200ProductsItemCategory = typeof GetApiProducts200ProductsItemCategory[keyof typeof GetApiProducts200ProductsItemCategory];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiProducts200ProductsItemCategory = {
  toy: 'toy',
  furniture: 'furniture',
  stationery: 'stationery',
  health_beauty: 'health_beauty',
  utensil: 'utensil',
  clothing: 'clothing',
} as const;

export type GetApiProducts200ProductsItemStatus = typeof GetApiProducts200ProductsItemStatus[keyof typeof GetApiProducts200ProductsItemStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const GetApiProducts200ProductsItemStatus = {
  listed: 'listed',
  sold: 'sold',
  canceled: 'canceled',
} as const;

export type GetApiProducts200ProductsItem = {
  /**
   * @maximum 9007199254740991
   */
  id: number;
  /** @maxLength 255 */
  title: string;
  /** @nullable */
  image: string | null;
  /** @pattern ^\d+(\.\d{1,2})?$ */
  price: string;
  description: string;
  category: GetApiProducts200ProductsItemCategory;
  status: GetApiProducts200ProductsItemStatus;
  createdAt: string;
  updatedAt: string;
  idUser: string;
};

export type GetApiProducts200 = {
  products: GetApiProducts200ProductsItem[];
  /** @minimum 1 */
  page: number;
  /** @minimum 1 */
  totalPages: number;
};

/**
 * Internal Server Error
 */
export type GetApiProducts500 = {
  statusCode: number;
  error: string;
  message: string;
};

export type PostApiProductsBodyCategory = typeof PostApiProductsBodyCategory[keyof typeof PostApiProductsBodyCategory];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiProductsBodyCategory = {
  toy: 'toy',
  furniture: 'furniture',
  stationery: 'stationery',
  health_beauty: 'health_beauty',
  utensil: 'utensil',
  clothing: 'clothing',
} as const;

export type PostApiProductsBody = {
  /** @maxLength 255 */
  title: string;
  /** @pattern ^\d+(\.\d{1,2})?$ */
  price: string;
  description: string;
  category: PostApiProductsBodyCategory;
};

export type PostApiProducts201Category = typeof PostApiProducts201Category[keyof typeof PostApiProducts201Category];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiProducts201Category = {
  toy: 'toy',
  furniture: 'furniture',
  stationery: 'stationery',
  health_beauty: 'health_beauty',
  utensil: 'utensil',
  clothing: 'clothing',
} as const;

export type PostApiProducts201Status = typeof PostApiProducts201Status[keyof typeof PostApiProducts201Status];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PostApiProducts201Status = {
  listed: 'listed',
  sold: 'sold',
  canceled: 'canceled',
} as const;

export type PostApiProducts201 = {
  /**
   * @maximum 9007199254740991
   */
  id: number;
  /** @maxLength 255 */
  title: string;
  /** @nullable */
  image: string | null;
  /** @pattern ^\d+(\.\d{1,2})?$ */
  price: string;
  description: string;
  category: PostApiProducts201Category;
  status: PostApiProducts201Status;
  createdAt: string;
  updatedAt: string;
  idUser: string;
};

/**
 * Internal Server Error
 */
export type PostApiProducts500 = {
  statusCode: number;
  error: string;
  message: string;
};

export type PatchApiProductsIdProductBodyAllOfCategory = typeof PatchApiProductsIdProductBodyAllOfCategory[keyof typeof PatchApiProductsIdProductBodyAllOfCategory];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiProductsIdProductBodyAllOfCategory = {
  toy: 'toy',
  furniture: 'furniture',
  stationery: 'stationery',
  health_beauty: 'health_beauty',
  utensil: 'utensil',
  clothing: 'clothing',
} as const;

export type PatchApiProductsIdProductBodyAllOf = {
  /** @maxLength 255 */
  title?: string;
  /** @pattern ^\d+(\.\d{1,2})?$ */
  price?: string;
  description?: string;
  category?: PatchApiProductsIdProductBodyAllOfCategory;
};

export type PatchApiProductsIdProductBodyAllOfThreeStatus = typeof PatchApiProductsIdProductBodyAllOfThreeStatus[keyof typeof PatchApiProductsIdProductBodyAllOfThreeStatus];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiProductsIdProductBodyAllOfThreeStatus = {
  listed: 'listed',
  sold: 'sold',
  canceled: 'canceled',
} as const;

export type PatchApiProductsIdProductBodyAllOfThree = {
  status?: PatchApiProductsIdProductBodyAllOfThreeStatus;
};

export type PatchApiProductsIdProductBody = PatchApiProductsIdProductBodyAllOf & PatchApiProductsIdProductBodyAllOfThree;

export type PatchApiProductsIdProduct200Category = typeof PatchApiProductsIdProduct200Category[keyof typeof PatchApiProductsIdProduct200Category];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiProductsIdProduct200Category = {
  toy: 'toy',
  furniture: 'furniture',
  stationery: 'stationery',
  health_beauty: 'health_beauty',
  utensil: 'utensil',
  clothing: 'clothing',
} as const;

export type PatchApiProductsIdProduct200Status = typeof PatchApiProductsIdProduct200Status[keyof typeof PatchApiProductsIdProduct200Status];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const PatchApiProductsIdProduct200Status = {
  listed: 'listed',
  sold: 'sold',
  canceled: 'canceled',
} as const;

export type PatchApiProductsIdProduct200 = {
  /**
   * @maximum 9007199254740991
   */
  id: number;
  /** @maxLength 255 */
  title: string;
  /** @nullable */
  image: string | null;
  /** @pattern ^\d+(\.\d{1,2})?$ */
  price: string;
  description: string;
  category: PatchApiProductsIdProduct200Category;
  status: PatchApiProductsIdProduct200Status;
  createdAt: string;
  updatedAt: string;
  idUser: string;
};

/**
 * Not Found
 */
export type PatchApiProductsIdProduct404 = {
  statusCode: number;
  error: string;
  message: string;
};

/**
 * Internal Server Error
 */
export type PatchApiProductsIdProduct500 = {
  statusCode: number;
  error: string;
  message: string;
};

export type PatchApiUsersPhotoUploadBody = {
  /** binary */
  file: Blob;
};

